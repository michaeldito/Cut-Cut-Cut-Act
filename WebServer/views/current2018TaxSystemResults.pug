-

	function numberWithCommas(x) {
		return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
	}

	income = numberWithCommas(income.toFixed(2));
	standardDeduction = numberWithCommas(standardDeduction.toFixed(2));
	stateAndLocalTaxDeduction = numberWithCommas(stateAndLocalTaxDeduction.toFixed(2));
	deductions = numberWithCommas(deductions.toFixed(2));
	taxableIncome = numberWithCommas(taxableIncome.toFixed(2));
	credits = numberWithCommas(credits.toFixed(2));
	var taxedAmountFromBrackets = numberWithCommas(bracketResults.taxedAmountFromBrackets.toFixed(2));
	taxedAmountAfterCredits = numberWithCommas(taxedAmountAfterCredits.toFixed(2));

label Tax Owed
| $#{taxedAmountAfterCredits}
br
br
h4 Calculation
label Total Income
| $#{income}
label Minus the following deductions
label Standard Deduction
| $#{standardDeduction}
label State And Local Tax Deductions
| $#{stateAndLocalTaxDeduction}
label Itemized Deductions
| $#{deductions}
br
label Leaves you with Taxable Income of
| $#{taxableIncome}
br
br
h5 Tax Brackets
table
	tr
		td Start of Bracket
		td End of Bracket
		td Percent
		td Income within Bracket
		td Amount Paid in Taxes
	each bracket, index in bracketResults.resultsFromBrackets
		tr
			-
				var taxedAmount = numberWithCommas((bracket.taxedAmount).toFixed(2));
				var start = numberWithCommas(bracket.start.toFixed(2));
				var end = bracket.end;
				if (end == 'inf') end = 'infinity'; else end = numberWithCommas(parseFloat(end).toFixed(2));
				var percent = (bracket.percent * 100).toFixed(1);
				var incomeInBracket = numberWithCommas(bracket.incomeInBracket.toFixed(2));
			td $#{start}
			td $#{end}
			td #{percent}%
			td $#{incomeInBracket}
			td $#{taxedAmount}


br

| You pay a total of $#{taxedAmountFromBrackets} in taxes due to the brackets. 
br

| You taxes are further reduced by $#{credits} in tax credits.
br

label Leaving you owing $#{taxedAmountAfterCredits} out of your total income of $#{income}.
br